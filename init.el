; SPDX-License-Identifier: MIT
;;===========================================================================
;;
;;  init.el
;;
;;  Emacs initialization file.
;;
;;===========================================================================



;============================================================================
;  Packages
;----------------------------------------------------------------------------
;  Include MELPA packages.  Per https://melpa.org/#/getting-started.
(require 'package)
(let
  ((archives (list
      '("melpa-stable" . "https://stable.melpa.org/packages/")
      '("melpa"        . "https://melpa.org/packages/")
  )))
  (dolist (archive archives) (add-to-list 'package-archives archive t))
)

;  This initialization must occur before package configuration
(package-initialize)

;  Require use-package for loading of packages
(eval-when-compile
  (require 'use-package)
)
;____________________________________________________________________________



;============================================================================
;  Require selected packages
;
;  May need to manually install packages in custom-set-variables's
;  package-selected-packages below as I'm currently declining to allow
;  use-package to do so automatically.
;  ----------------------------------------------------------------------------
(use-package saveplace)
(use-package uniquify)
;____________________________________________________________________________



;============================================================================
;  File load
;
;  Theoretically one could use an automatic directory-load function (see
;  storage area) but load-order in some cases is significant and therefore
;  manual specification is necessary.
;----------------------------------------------------------------------------
;  Define local theme directory
(setq-default custom-theme-directory "~/.emacs.d/Init/Theme")

;  Load paths and sources
(let
  (
    (directories '(
      "Init"
      "Init/Mode"
      ;  To allow loading of theme-base
      "Init/Theme"
    ))
    (source-config '(
      "variable"
      "theme"
      "mode"
      "syntax_table"
      "binding"
    ))
    (source-function '(
      "buffer"
      "window"
      "editing"
      "macro"
      "search"
    ))
  )
  ;  Define load paths with directory names under ~/.emacs.d
  (dolist (directory directories)
    (add-to-list 'load-path (concat "~/.emacs.d/" directory "/")))

  ;  Load all sources.  Respect the order specified.
  (dolist (source source-config)
    (load-library (concat "Configuration/" source)))
  (dolist (source source-function)
    (load-library (concat "Function/" source)))
)
;____________________________________________________________________________



;============================================================================
;  Modes (internally-defined)
;----------------------------------------------------------------------------
(require 'text-extra-mode)
;____________________________________________________________________________



;============================================================================
;  Initial frame/window actions
;----------------------------------------------------------------------------
;  Maximize frame on start
;
;  Relying upon calls to emacs with the --maximized switch instead as the
;  subsequent windowing action does not wait for maximization.
;(add-to-list 'initial-frame-alist '(fullscreen . maximized)) ; Alternative 1
;(toggle-frame-maximized)                                     ; Alternative 2

;  Arrange windows
(cast-unbalanced-windows)
;____________________________________________________________________________



;============================================================================
;  Built-in Emacs customization
;
;  Generated by the Emacs Customize system.
;
;  custom-set-variables
;  custom-set-faces
;
;
;  Changes to minibuffer-prompt-properties for some reason have no effect
;  (despite being reflected in the variable's value) if the assignment is
;  moved outside of custom-set-variables.
;----------------------------------------------------------------------------
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(minibuffer-prompt-properties
              (quote
               (read-only t cursor-intangible t face minibuffer-prompt)))
 '(package-selected-packages
           (quote
            (buffer-move git-gutter highlight-indent-guides magit markdown-mode move-text raku-mode use-package winring))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )



;;|EOF
